#!/usr/bin/env node

var fs = require('fs'),
  path = require('path'),
  mime = require('mime'),
  spawn = require('child_process').spawn,
  datauri = require('../lib/datauri'),
  helper = require('../lib/helper');

// Monolithic script, first try and experiment at trying
// to automate the embedding of images in CSS files.
//
// Have to work with both data URI and mhtml for IE < 8
//

// ## usage
//
//    ./datauri file1.css file2.css file3.css
//    ./datauri css/*.css
//
// images references gets replaced by their base64 equivalent:
//
// * datauris: for FF, Safari, O, Chrome, IE < 8
// * mhtml: for IE < 8
//
// ideally, rely on `.ie6` and `.ie7` html css class placeholder.
//
// Path in css are declared relatively, this script will lookup them
// based on the css file path.
//
// Should only inline imgs < 32 kilobytes

var files = process.argv.slice(2);

// before running anything, check if the first argument is 'help' or not. If it is, output man page.
if(files[0] === 'help') return helper.help();

// first iterate over css files, get hash obj with filepath/content
var css = files.map(datauri.cssMap);

// first iteration, this time we'll generate mhtml equivalent
// and try to automatically add rules for `.ie6`, `.ie7` placeholder
css.forEach(datauri.cssEach);

// then, iterate over styles and replace inline references,
// also builds up the mhtml front comments.
css.forEach(datauri.cssDatauri);

// write files, they're generated along the css files parsed,
// with a `-datauri.css` suffix.
css.forEach(datauri.writeFiles);

